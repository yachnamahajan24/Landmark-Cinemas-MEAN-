{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/about/about.component.ts","webpack:///src/app/about/about.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/food-service.service.ts","webpack:///src/app/framework/framework.component.ts","webpack:///src/app/framework/framework.component.html","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/home-list/home-list.component.ts","webpack:///src/app/home-list/home-list.component.html","webpack:///src/app/homepage/homepage.component.ts","webpack:///src/app/homepage/homepage.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AboutComponent","selector","templateUrl","styles","forRoot","path","component","AppModule","provide","useValue","declarations","imports","providers","bootstrap","FoodDataService","http","foodUrl","get","toPromise","response","handleError","error","console","log","FrameworkComponent","HeaderComponent","HomeListComponent","foodService","getFoods","foods","map","food","styleUrls","HomepageComponent","pageContent","header","title","body","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styles: [\n  ],\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>about works!</p>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { HomeListComponent } from './home-list/home-list.component';\nimport { AboutComponent } from './about/about.component';\nimport { HomepageComponent } from './homepage/homepage.component';\nimport { HeaderComponent } from './header/header.component';\nimport { FrameworkComponent } from './framework/framework.component';\nimport { APP_BASE_HREF } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nRouterModule.forRoot([\n  {\n    path:'',\n    component: HomepageComponent\n  },\n  {\n    path:'about',\n    component: AboutComponent\n  }\n])\n\n\n\n@NgModule({\n  declarations: [\n    HomeListComponent,\n    AboutComponent,\n    HomepageComponent,\n    HeaderComponent,\n    FrameworkComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    RouterModule.forRoot([\n      {\n        path:'',\n        component: HomepageComponent\n      },\n      {\n        path:'about',\n        component: AboutComponent\n      }\n    ])\n  ],\n  providers: [{provide: APP_BASE_HREF, useValue:'/'}],\n  bootstrap:[FrameworkComponent]\n\n})\nexport class AppModule { }\n\n","import { Injectable } from '@angular/core';\nimport { Food } from './food';\nimport { HttpClient, HttpResponse} from '@angular/common/http';\n\n@Injectable()\nexport class FoodDataService {\n    private foodUrl = 'http://localhost:3000/api/foods';\n    \n    constructor(private http: HttpClient) {}\n        getFoods(): Promise<void | Food[]> {\n            return this.http.get(this.foodUrl)\n                        .toPromise()\n                        .then(response => response as Food[])\n                        .catch(this.handleError);\n        }\n  private handleError(error: any) {\n    console.log(\"error\");\n  }  \n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-framework',\n  templateUrl: './framework.component.html',\n  styles: [\n  ],\n})\nexport class FrameworkComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<span><a routerLink = \"\">HOME</a>\n    <a routerLink = \"about\">ABOUT</a>\n</span>\n<router-outlet></router-outlet>\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styles: [\n  ],\n})\nexport class HeaderComponent implements OnInit {\n  @Input() content: any;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>header works!</p>\n<div class = \"row banner\">\n    <div class = \"col-12\">\n        <h1>{{content.title}}\n        <p>{{content.body}}</p>\n        </h1>\n    </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { Food } from '../food';\nimport { FoodDataService } from '../food-service.service';\n\n@Component({\n  selector: 'app-home-list',\n  templateUrl: './home-list.component.html',\n  styleUrls: ['./home-list.component.css'],\n  providers: [FoodDataService]\n})\nexport class HomeListComponent implements OnInit {\n    foods: Food[]\n\n  constructor(private foodService: FoodDataService) { }\n\n  ngOnInit(){\n    this.foodService\n    .getFoods()\n    .then((foods: Food[]) => {\n        this.foods = foods.map(food => {\n        \n        return food;\n    });\n    });\n  }\n  }\n\n\n\n","<li *ngFor= \"let food of foods\">{{ food.name }}</li>\n\n\n\n<!-- <p>home-list works!</p> -->\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-homepage',\n  templateUrl: './homepage.component.html',\n  styles: [\n  ],\n})\nexport class HomepageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  pageContent = {\n    header: {\n      title: 'My Food List',\n      body: 'This is a list of the meals I have eaten'\n    }\n  };\n\n}\n","<app-header [content] = \"pageContent.header\"></app-header>\n<app-home-list></app-home-list>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}